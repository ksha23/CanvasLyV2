{"version":3,"file":"googleAuthCodeStrategy.js","names":["_passport","_interopRequireDefault","require","_User","obj","__esModule","default","config","GoogleAuthCodeStrategy","Strategy","refresh","serverUrl","process","env","NODE_ENV","SERVER_URL_PROD","SERVER_URL_DEV","googleAuthCodeLogin","clientID","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","callbackURL","GOOGLE_CALLBACK_URL","accessToken","refreshToken","profile","done","oldUser","User","findOne","email","_json","newUser","provider","googleId","id","username","name","displayName","avatar","picture","tokenExpiresAt","Date","getTime","save","err","console","log","passport","use"],"sources":["../../src/services/googleAuthCodeStrategy.js"],"sourcesContent":["require('dotenv').config();\nconst GoogleAuthCodeStrategy = require('passport-google-authcode').Strategy;\nimport passport from 'passport';\nimport User from '../models/User';\nconst refresh = require('passport-oauth2-refresh');\n\nconst serverUrl = process.env.NODE_ENV === 'production' ? process.env.SERVER_URL_PROD : process.env.SERVER_URL_DEV;\n\nconst googleAuthCodeLogin = new GoogleAuthCodeStrategy(\n  {\n    clientID: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    callbackURL: `${serverUrl}${process.env.GOOGLE_CALLBACK_URL}`,\n  },\n  async (accessToken, refreshToken, profile, done) => {\n    try {\n      const oldUser = await User.findOne({ email: profile._json.email });\n\n      if (oldUser) {\n        // remove refresh token from user object\n        // oldUser.refreshToken = undefined;\n        return done(null, oldUser);\n      }\n\n      const newUser = await new User({\n        provider: 'google',\n        googleId: profile.id,\n        username: `user${profile.id}`,\n        email: profile._json.email,\n        name: profile.displayName,\n        avatar: profile._json.picture,\n        accessToken: accessToken,\n        refreshToken: refreshToken,\n        tokenExpiresAt: new Date().getTime() + 3599 * 1000,\n      }).save();\n\n      // remove refresh token from user object\n      // newUser.refreshToken = undefined;\n      done(null, newUser);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n);\n\npassport.use(googleAuthCodeLogin);\nrefresh.use(googleAuthCodeLogin);\n"],"mappings":";;AAEA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAkC,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAHlCF,OAAO,CAAC,QAAQ,CAAC,CAACK,MAAM,CAAC,CAAC;AAC1B,MAAMC,sBAAsB,GAAGN,OAAO,CAAC,0BAA0B,CAAC,CAACO,QAAQ;AAG3E,MAAMC,OAAO,GAAGR,OAAO,CAAC,yBAAyB,CAAC;AAElD,MAAMS,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGF,OAAO,CAACC,GAAG,CAACE,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,cAAc;AAElH,MAAMC,mBAAmB,GAAG,IAAIT,sBAAsB,CACpD;EACEU,QAAQ,EAAEN,OAAO,CAACC,GAAG,CAACM,gBAAgB;EACtCC,YAAY,EAAER,OAAO,CAACC,GAAG,CAACQ,oBAAoB;EAC9CC,WAAW,EAAG,GAAEX,SAAU,GAAEC,OAAO,CAACC,GAAG,CAACU,mBAAoB;AAC9D,CAAC,EACD,OAAOC,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAEC,IAAI,KAAK;EAClD,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMC,aAAI,CAACC,OAAO,CAAC;MAAEC,KAAK,EAAEL,OAAO,CAACM,KAAK,CAACD;IAAM,CAAC,CAAC;IAElE,IAAIH,OAAO,EAAE;MACX;MACA;MACA,OAAOD,IAAI,CAAC,IAAI,EAAEC,OAAO,CAAC;IAC5B;IAEA,MAAMK,OAAO,GAAG,MAAM,IAAIJ,aAAI,CAAC;MAC7BK,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAET,OAAO,CAACU,EAAE;MACpBC,QAAQ,EAAG,OAAMX,OAAO,CAACU,EAAG,EAAC;MAC7BL,KAAK,EAAEL,OAAO,CAACM,KAAK,CAACD,KAAK;MAC1BO,IAAI,EAAEZ,OAAO,CAACa,WAAW;MACzBC,MAAM,EAAEd,OAAO,CAACM,KAAK,CAACS,OAAO;MAC7BjB,WAAW,EAAEA,WAAW;MACxBC,YAAY,EAAEA,YAAY;MAC1BiB,cAAc,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG;IAChD,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;;IAET;IACA;IACAlB,IAAI,CAAC,IAAI,EAAEM,OAAO,CAAC;EACrB,CAAC,CAAC,OAAOa,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CACF,CAAC;AAEDG,iBAAQ,CAACC,GAAG,CAACjC,mBAAmB,CAAC;AACjCP,OAAO,CAACwC,GAAG,CAACjC,mBAAmB,CAAC"}