{"version":3,"file":"googleStrategy.js","names":["_passport","_interopRequireDefault","require","_passportGoogleOauth","_User","obj","__esModule","default","refresh","serverUrl","process","env","NODE_ENV","SERVER_URL_PROD","SERVER_URL_DEV","googleLogin","GoogleStrategy","clientID","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","callbackURL","GOOGLE_CALLBACK_URL","proxy","accessToken","refreshToken","profile","done","oldUser","User","findOne","email","err","console","log","newUser","provider","googleId","id","username","name","displayName","avatar","picture","tokenExpiresAt","Date","getTime","save","use","passport"],"sources":["../../src/services/googleStrategy.js"],"sourcesContent":["import passport from 'passport';\nimport { Strategy as GoogleStrategy } from 'passport-google-oauth2';\nconst refresh = require('passport-oauth2-refresh');\n\nimport User from '../models/User';\n\nconst serverUrl = process.env.NODE_ENV === 'production' ? process.env.SERVER_URL_PROD : process.env.SERVER_URL_DEV;\n\n// google strategy\nconst googleLogin = new GoogleStrategy(\n  {\n    clientID: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    callbackURL: `${serverUrl}${process.env.GOOGLE_CALLBACK_URL}`,\n    proxy: true,\n  },\n  async (accessToken, refreshToken, profile, done) => {\n    try {\n      const oldUser = await User.findOne({ email: profile.email });\n\n      if (oldUser) {\n        return done(null, oldUser);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    try {\n      const newUser = await new User({\n        provider: 'google',\n        googleId: profile.id,\n        username: `user${profile.id}`,\n        email: profile.email,\n        name: profile.displayName,\n        avatar: profile.picture,\n        accessToken: accessToken,\n        refreshToken: refreshToken,\n        tokenExpiresAt: new Date().getTime() + 3599 * 1000,\n      }).save();\n\n      // remove refresh token from user object\n      // newUser.refreshToken = undefined;\n      done(null, newUser);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n);\n\nrefresh.use(googleLogin);\npassport.use(googleLogin);\n"],"mappings":";;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,oBAAA,GAAAD,OAAA;AAGA,IAAAE,KAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAkC,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAFlC,MAAMG,OAAO,GAAGN,OAAO,CAAC,yBAAyB,CAAC;AAIlD,MAAMO,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGF,OAAO,CAACC,GAAG,CAACE,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,cAAc;;AAElH;AACA,MAAMC,WAAW,GAAG,IAAIC,6BAAc,CACpC;EACEC,QAAQ,EAAEP,OAAO,CAACC,GAAG,CAACO,gBAAgB;EACtCC,YAAY,EAAET,OAAO,CAACC,GAAG,CAACS,oBAAoB;EAC9CC,WAAW,EAAG,GAAEZ,SAAU,GAAEC,OAAO,CAACC,GAAG,CAACW,mBAAoB,EAAC;EAC7DC,KAAK,EAAE;AACT,CAAC,EACD,OAAOC,WAAW,EAAEC,YAAY,EAAEC,OAAO,EAAEC,IAAI,KAAK;EAClD,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMC,aAAI,CAACC,OAAO,CAAC;MAAEC,KAAK,EAAEL,OAAO,CAACK;IAAM,CAAC,CAAC;IAE5D,IAAIH,OAAO,EAAE;MACX,OAAOD,IAAI,CAAC,IAAI,EAAEC,OAAO,CAAC;IAC5B;EACF,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;EAEA,IAAI;IACF,MAAMG,OAAO,GAAG,MAAM,IAAIN,aAAI,CAAC;MAC7BO,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAEX,OAAO,CAACY,EAAE;MACpBC,QAAQ,EAAG,OAAMb,OAAO,CAACY,EAAG,EAAC;MAC7BP,KAAK,EAAEL,OAAO,CAACK,KAAK;MACpBS,IAAI,EAAEd,OAAO,CAACe,WAAW;MACzBC,MAAM,EAAEhB,OAAO,CAACiB,OAAO;MACvBnB,WAAW,EAAEA,WAAW;MACxBC,YAAY,EAAEA,YAAY;MAC1BmB,cAAc,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG;IAChD,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;;IAET;IACA;IACApB,IAAI,CAAC,IAAI,EAAEQ,OAAO,CAAC;EACrB,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB;AACF,CACF,CAAC;AAEDxB,OAAO,CAACwC,GAAG,CAACjC,WAAW,CAAC;AACxBkC,iBAAQ,CAACD,GAAG,CAACjC,WAAW,CAAC"}